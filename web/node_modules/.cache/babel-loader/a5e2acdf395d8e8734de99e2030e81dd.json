{"ast":null,"code":"// import BaiduMap from 'vue-baidu-map/components/map/Map.vue'\n// import { onMounted } from 'vue'\nimport { BaiduMap } from 'vue-baidu-map-3x'; // import { useStore } from 'vuex'\n\nimport { reactive, ref, nextTick } from 'vue';\nimport { useStore } from 'vuex';\nimport $ from 'jquery'; // import router from '@/router/index'\n\nexport default {\n  components: {\n    // BaiduMap\n    BaiduMap\n  },\n\n  setup() {\n    // const end = ref({\n    //     lng: 0,\n    //     lat: 0\n    // });\n    // const start = ref({\n    //     lng: 0,\n    //     lat: 0\n    // });\n    const store = useStore();\n    var param = localStorage.getItem(\"routeId\");\n    const routeId = param;\n    const center = ref({\n      lng: 118.36,\n      lat: 34.629\n    });\n    const run = reactive({\n      start: {\n        lng: 118.366382,\n        lat: 34.629637\n      },\n      localtion: {\n        lng: 0,\n        lat: 0\n      },\n      end: {\n        lng: 118.380272,\n        lat: 34.616019\n      }\n    });\n\n    const displayStart = position => {\n      run.start.lng = position.coords.longitude, run.start.lat = position.coords.latitude;\n      console.log(\"--------------------\");\n      console.log(\"run.start:\" + run.start.lng + \",\" + run.start.lat);\n    };\n\n    const displayLocation = position => {\n      run.localtion.lng = position.coords.longitude, run.localtion.lat = position.coords.latitude;\n      console.log(\"--------------------\");\n      console.log(\"run.start:\" + run.start.lng + \",\" + run.start.lat);\n    };\n\n    const displayError = () => {};\n\n    console.log(1);\n    navigator.geolocation.getCurrentPosition(displayStart, displayError);\n    console.log(2); //js定时器，每5s上报一次地理位置\n\n    setInterval(async function () {\n      await navigator.geolocation.getCurrentPosition(displayLocation, displayError);\n      await $.ajax({\n        url: \"http://localhost:3000/user/cycle/run/\" + routeId,\n        type: \"post\",\n        async: true,\n        //设置同步方法，这样就可以在返回上一页再骑行的时候可以等上一个ajax执行完，再执行一个全新的ajax请求\n        data: {\n          latitude: 34.629637,\n          //run.localtion.lat,\n          longitude: 118.366382,\n          //run.localtion.lng,\n          speed: 3 //run.localtion.speed\n\n        },\n        headers: {\n          Authorization: \"Bearer \" + store.state.user.token\n        },\n\n        success(resp) {\n          console.log(resp);\n        },\n\n        error(resp) {\n          console.log(resp);\n        }\n\n      });\n    }, 888000);\n    const localPoint = reactive({\n      lng: 0,\n      lat: 0\n    }); //{ lng: 118.366382, lat: 34.629637 }\n\n    let zoom = ref(15);\n    console.log(\"routeID:\" + routeId);\n\n    const syncCenterAndZoom = e => {\n      const {\n        lng,\n        lat\n      } = e.target.getCenter();\n      zoom.value = e.target.getZoom();\n      nextTick(() => {\n        center.value.lng = lng;\n        center.value.lat = lat;\n        console.log(\"center.value.lng=\" + center.value.lng);\n      });\n    };\n\n    const searchcomplete = LocalResult => {\n      console.log(LocalResult.Array);\n    };\n\n    return {\n      center,\n      run,\n      localPoint,\n      zoom,\n      searchcomplete,\n      syncCenterAndZoom\n    }; //-----------------------------------------\n    // let map = ref('');\n    // const initMap = () => {\n    //     map.value = new BMapGL.Map('map');\n    //     map.value.centercenterAndZoom(new BMapGL.Point(104.072242, 30.663711), 14);\n    // }\n    // initMap();\n    // return {\n    //     map,\n    //     initMap,\n    // }\n    // onMounted(() => {\n    // })\n    // var map = new BMap.Map('container')\n    // var point = new BMap.Point(116.404, 39.915)\n    // map.centerAndZoom(point, 15)\n    // map.enableScrollWheelZoom(true)\n  }\n\n};","map":{"version":3,"mappings":"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","names":["BaiduMap","reactive","ref","nextTick","useStore","$","components","setup","store","param","localStorage","getItem","routeId","center","lng","lat","run","start","localtion","end","displayStart","position","coords","longitude","latitude","console","log","displayLocation","displayError","navigator","geolocation","getCurrentPosition","setInterval","ajax","url","type","async","data","speed","headers","Authorization","state","user","token","success","resp","error","localPoint","zoom","syncCenterAndZoom","e","target","getCenter","value","getZoom","searchcomplete","LocalResult","Array"],"sourceRoot":"","sources":["D:\\MyAllCoding\\SmartCycling\\web\\src\\views\\user\\cycles\\UserCycleRunIndexView.vue"],"sourcesContent":["<!-- <template>\r\n    <input v-model=\"center.lng\">\r\n    <input v-model=\"center.lat\">\r\n    <input v-model=\"zoom\">\r\n    <baidu-map class=\"map\" :scroll-wheel-zoom=\"true\" :center=\"center\" :zoom=\"zoom\" @moving=\"syncCenterAndZoom\"\r\n        @moveend=\"syncCenterAndZoom\" @zoomend=\"syncCenterAndZoom\">\r\n    </baidu-map>    \r\n    <div id=\"container\"></div>\r\n\r\n    111\r\n</template> -->\r\n\r\n<template>\r\n    <div>\r\n        <!-- <label>关键词：<input v-model=\"keyword\"></label>\r\n        <label>地区：<input v-model=\"location\"></label> -->\r\n        <baidu-map class=\"map\" style=\"overflow:auto\" center=\"山东省临沂市郯城县\" :scroll-wheel-zoom=\"true\">\r\n            <!-- <bm-walking :start=\"run.start\" :end=\"run.end\" :auto-viewport=\"true\" :policy=\"policy\" :panel=\"true\"\r\n                location=\" 山东省临沂市郯城县\" :selectFirstResult=\"true\"></bm-walking> -->\r\n            <bm-local-search keyword=\"银行\" :auto-viewport=\"true\" :panel=\"false\"\r\n                @searchcomplete=\"searchcomplete\"></bm-local-search>\r\n            <!-- { lng: 118.380272, lat: 34.616019 }体育馆 -->\r\n            <!-- { lng: 123.792825, lat: 41.861801 } -->\r\n        </baidu-map>\r\n    </div>\r\n</template>\r\n\r\n\r\n<!-- 搜索前往自定义点，交给后端，给定区域找最近的自定义点，返回该点的坐标给前端 -->\r\n\r\n<!-- 定时上报地理位置：js定时器 -->\r\n\r\n    <!-- 循环定时器，不停歇，每过一段时间time，执行一次。\r\n         setInterval(function () { },time); time:1000代表1s\r\n         清除setInterval循环定时器\r\n         clearInterval(定时器名称); \r\n    -->\r\n\r\n<!-- 运动过程中不断移动的点：使用vue-baidu-map-v3中的point，通过每5s上报一次地理位置的时候，就更新点的坐标 -->\r\n\r\n<!-- 路径的显示和关闭可以通过v-if，再加上js中定义一个变量动态实现 -->\r\n\r\n<!-- 经过测试手机浏览器定位是很准的，web端定位是不准确的 -->\r\n<!-- 我们可以电脑连接手机热点，然后请求url改为192.168.99.65，改完一定要每一个被修改的vue文件界面都保存一下，再将vue sever项目重新启动，即可手机端访问 -->\r\n\r\n\r\n<script>\r\n// import BaiduMap from 'vue-baidu-map/components/map/Map.vue'\r\n// import { onMounted } from 'vue'\r\n\r\nimport { BaiduMap } from 'vue-baidu-map-3x'\r\n// import { useStore } from 'vuex'\r\nimport { reactive, ref, nextTick } from 'vue';\r\nimport { useStore } from 'vuex'\r\n\r\nimport $ from 'jquery'\r\n// import router from '@/router/index'\r\nexport default {\r\n\r\n    components: {\r\n        // BaiduMap\r\n        BaiduMap\r\n    },\r\n    setup() {\r\n        // const end = ref({\r\n        //     lng: 0,\r\n        //     lat: 0\r\n        // });\r\n        // const start = ref({\r\n        //     lng: 0,\r\n        //     lat: 0\r\n        // });\r\n        const store = useStore();\r\n        var param = localStorage.getItem(\"routeId\");\r\n        const routeId = param;\r\n        const center = ref({\r\n            lng: 118.36,\r\n            lat: 34.629,\r\n        });\r\n        const run = reactive({\r\n            start: {\r\n                lng: 118.366382,\r\n                lat: 34.629637\r\n            },\r\n            localtion: {\r\n                lng: 0,\r\n                lat: 0\r\n            },\r\n            end: {\r\n                lng: 118.380272,\r\n                lat: 34.616019\r\n            },\r\n        });\r\n        const displayStart = (position) => {\r\n            run.start.lng = position.coords.longitude,\r\n                run.start.lat = position.coords.latitude;\r\n            console.log(\"--------------------\");\r\n            console.log(\"run.start:\" + run.start.lng + \",\" + run.start.lat);\r\n        }\r\n\r\n        const displayLocation = (position) => {\r\n            run.localtion.lng = position.coords.longitude,\r\n                run.localtion.lat = position.coords.latitude;\r\n            console.log(\"--------------------\");\r\n            console.log(\"run.start:\" + run.start.lng + \",\" + run.start.lat);\r\n        }\r\n        const displayError = () => {\r\n\r\n        }\r\n        console.log(1);\r\n        navigator.geolocation.getCurrentPosition(displayStart, displayError);\r\n\r\n        console.log(2);\r\n\r\n        //js定时器，每5s上报一次地理位置\r\n        setInterval(async function () {\r\n            await navigator.geolocation.getCurrentPosition(displayLocation, displayError);\r\n            await $.ajax({\r\n                url: \"http://localhost:3000/user/cycle/run/\" + routeId,\r\n                type: \"post\",\r\n                async: true,//设置同步方法，这样就可以在返回上一页再骑行的时候可以等上一个ajax执行完，再执行一个全新的ajax请求\r\n                data: {\r\n                    latitude: 34.629637,//run.localtion.lat,\r\n                    longitude: 118.366382,//run.localtion.lng,\r\n                    speed: 3,//run.localtion.speed\r\n                },\r\n                headers: {\r\n                    Authorization: \"Bearer \" + store.state.user.token,\r\n                },\r\n                success(resp) {\r\n                    console.log(resp);\r\n                },\r\n                error(resp) {\r\n                    console.log(resp);\r\n                }\r\n            });\r\n        }, 888000);\r\n\r\n        const localPoint = reactive({ lng: 0, lat: 0, });//{ lng: 118.366382, lat: 34.629637 }\r\n        let zoom = ref(15);\r\n\r\n        console.log(\"routeID:\" + routeId);\r\n        const syncCenterAndZoom = (e) => {\r\n            const { lng, lat } = e.target.getCenter();\r\n            zoom.value = e.target.getZoom();\r\n            nextTick(() => {\r\n                center.value.lng = lng;\r\n                center.value.lat = lat;\r\n                console.log(\"center.value.lng=\" + center.value.lng);\r\n            })\r\n        };\r\n\r\n        const searchcomplete = (LocalResult) => {\r\n            console.log(LocalResult.Array);\r\n        }\r\n\r\n        return {\r\n            center,\r\n            run,\r\n            localPoint,\r\n            zoom,\r\n            searchcomplete,\r\n            syncCenterAndZoom,\r\n        }\r\n\r\n\r\n\r\n        //-----------------------------------------\r\n        // let map = ref('');\r\n\r\n\r\n        // const initMap = () => {\r\n        //     map.value = new BMapGL.Map('map');\r\n        //     map.value.centercenterAndZoom(new BMapGL.Point(104.072242, 30.663711), 14);\r\n        // }\r\n\r\n\r\n        // initMap();\r\n\r\n        // return {\r\n        //     map,\r\n        //     initMap,\r\n        // }\r\n        // onMounted(() => {\r\n\r\n        // })\r\n        // var map = new BMap.Map('container')\r\n        // var point = new BMap.Point(116.404, 39.915)\r\n        // map.centerAndZoom(point, 15)\r\n        // map.enableScrollWheelZoom(true)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.map {\r\n    width: 100%;\r\n    height: 1500px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}