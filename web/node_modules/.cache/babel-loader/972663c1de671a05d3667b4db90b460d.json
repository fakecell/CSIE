{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_bm_walking = _resolveComponent(\"bm-walking\");\n\n  const _component_bm_local_search = _resolveComponent(\"bm-local-search\");\n\n  const _component_baidu_map = _resolveComponent(\"baidu-map\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" <label>关键词：<input v-model=\\\"keyword\\\"></label>\\r\\n        <label>地区：<input v-model=\\\"location\\\"></label> \"), _createVNode(_component_baidu_map, {\n    class: \"map\",\n    style: {\n      \"overflow\": \"auto\"\n    },\n    center: \"山东省临沂市郯城县\",\n    \"scroll-wheel-zoom\": true\n  }, {\n    default: _withCtx(() => [_createVNode(_component_bm_walking, {\n      start: $setup.run.start,\n      end: $setup.run.end,\n      \"auto-viewport\": true,\n      policy: _ctx.policy,\n      panel: true,\n      location: \" 山东省临沂市郯城县\",\n      selectFirstResult: true\n    }, null, 8\n    /* PROPS */\n    , [\"start\", \"end\", \"policy\"]), _createVNode(_component_bm_local_search, {\n      keyword: \"银行\",\n      \"auto-viewport\": true,\n      panel: false\n    }), _createCommentVNode(\" { lng: 118.380272, lat: 34.616019 }体育馆 \"), _createCommentVNode(\" { lng: 123.792825, lat: 41.861801 } \")]),\n    _: 1\n    /* STABLE */\n\n  })]);\n}","map":{"version":3,"mappings":";;;;;;;;uBAaIA,oBAUM,KAVN,EAUM,IAVN,EAUM,CATFC,iIASE,EAPFC,aAMYC,oBANZ,EAMY;IANDC,KAAK,EAAC,KAML;IANWC,KAAqB,EAArB;MAAA;IAAA,CAMX;IANiCC,MAAM,EAAC,WAMxC;IANqD,qBAAmB;EAMxE,CANZ;sBACI,MACiE,CADjEJ,aACiEK,qBADjE,EACiE;MADpDC,KAAK,EAAEC,WAAID,KACyC;MADjCE,GAAG,EAAED,WAAIC,GACwB;MADlB,iBAAe,IACG;MADIC,MAAM,EAAEC,WACZ;MADqBC,KAAK,EAAE,IAC5B;MAA7DC,QAAQ,EAAC,YAAoD;MAAtCC,iBAAiB,EAAE;IAAmB,CADjE;;IAAA,6BACiE,EACjEb,aAAqFc,0BAArF,EAAqF;MAApEC,OAAO,EAAC,IAA4D;MAAtD,iBAAe,IAAuC;MAAhCJ,KAAK,EAAE;IAAyB,CAArF,CADiE,EAEjEZ,+DAFiE,EAGjEA,4DAHiE;;;;GAFrE,CAOE,CAVN","names":["_createElementBlock","_createCommentVNode","_createVNode","_component_baidu_map","class","style","center","_component_bm_walking","start","$setup","end","policy","_ctx","panel","location","selectFirstResult","_component_bm_local_search","keyword"],"sourceRoot":"","sources":["D:\\MyAllCoding\\SmartCycling\\web\\src\\views\\user\\cycles\\UserCycleRunIndexView.vue"],"sourcesContent":["<!-- <template>\r\n    <input v-model=\"center.lng\">\r\n    <input v-model=\"center.lat\">\r\n    <input v-model=\"zoom\">\r\n    <baidu-map class=\"map\" :scroll-wheel-zoom=\"true\" :center=\"center\" :zoom=\"zoom\" @moving=\"syncCenterAndZoom\"\r\n        @moveend=\"syncCenterAndZoom\" @zoomend=\"syncCenterAndZoom\">\r\n    </baidu-map>    \r\n    <div id=\"container\"></div>\r\n\r\n    111\r\n</template> -->\r\n\r\n<template>\r\n    <div>\r\n        <!-- <label>关键词：<input v-model=\"keyword\"></label>\r\n        <label>地区：<input v-model=\"location\"></label> -->\r\n        <baidu-map class=\"map\" style=\"overflow:auto\" center=\"山东省临沂市郯城县\" :scroll-wheel-zoom=\"true\">\r\n            <bm-walking :start=\"run.start\" :end=\"run.end\" :auto-viewport=\"true\" :policy=\"policy\" :panel=\"true\"\r\n                location=\" 山东省临沂市郯城县\" :selectFirstResult=\"true\"></bm-walking>\r\n            <bm-local-search keyword=\"银行\" :auto-viewport=\"true\" :panel=\"false\"></bm-local-search>\r\n            <!-- { lng: 118.380272, lat: 34.616019 }体育馆 -->\r\n            <!-- { lng: 123.792825, lat: 41.861801 } -->\r\n        </baidu-map>\r\n    </div>\r\n</template>\r\n\r\n\r\n<!-- 搜索前往自定义点，交给后端，给定区域找最近的自定义点，返回该点的坐标给前端 -->\r\n\r\n<!-- 定时上报地理位置：js定时器 -->\r\n\r\n    <!-- 循环定时器，不停歇，每过一段时间time，执行一次。\r\n         setInterval(function () { },time); time:1000代表1s\r\n         清除setInterval循环定时器\r\n         clearInterval(定时器名称); \r\n    -->\r\n\r\n<!-- 运动过程中不断移动的点：使用vue-baidu-map-v3中的point，通过每5s上报一次地理位置的时候，就更新点的坐标 -->\r\n\r\n<!-- 路径的显示和关闭可以通过v-if，再加上js中定义一个变量动态实现 -->\r\n\r\n<!-- 经过测试手机浏览器定位是很准的，web端定位是不准确的 -->\r\n<!-- 我们可以电脑连接手机热点，然后请求url改为192.168.99.65，改完一定要每一个被修改的vue文件界面都保存一下，再将vue sever项目重新启动，即可手机端访问 -->\r\n\r\n\r\n<script>\r\n// import BaiduMap from 'vue-baidu-map/components/map/Map.vue'\r\n// import { onMounted } from 'vue'\r\n\r\nimport { BaiduMap } from 'vue-baidu-map-3x'\r\n// import { useStore } from 'vuex'\r\nimport { reactive, ref, nextTick } from 'vue';\r\nimport { useStore } from 'vuex'\r\n\r\nimport $ from 'jquery'\r\n// import router from '@/router/index'\r\nexport default {\r\n\r\n    components: {\r\n        // BaiduMap\r\n        BaiduMap\r\n    },\r\n    setup() {\r\n        // const end = ref({\r\n        //     lng: 0,\r\n        //     lat: 0\r\n        // });\r\n        // const start = ref({\r\n        //     lng: 0,\r\n        //     lat: 0\r\n        // });\r\n        const store = useStore();\r\n        var param = localStorage.getItem(\"routeId\");\r\n        const routeId = param;\r\n        const center = ref({\r\n            lng: 118.36,\r\n            lat: 34.629,\r\n        });\r\n        const run = reactive({\r\n            start: {\r\n                lng: 118.366382,\r\n                lat: 34.629637\r\n            },\r\n            localtion: {\r\n                lng: 0,\r\n                lat: 0\r\n            },\r\n            end: {\r\n                lng: 118.380272,\r\n                lat: 34.616019\r\n            },\r\n        });\r\n        const displayStart = (position) => {\r\n            run.start.lng = position.coords.longitude,\r\n                run.start.lat = position.coords.latitude;\r\n            console.log(\"--------------------\");\r\n            console.log(\"run.start:\" + run.start.lng + \",\" + run.start.lat);\r\n        }\r\n\r\n        const displayLocation = (position) => {\r\n            run.localtion.lng = position.coords.longitude,\r\n                run.localtion.lat = position.coords.latitude;\r\n            console.log(\"--------------------\");\r\n            console.log(\"run.start:\" + run.start.lng + \",\" + run.start.lat);\r\n        }\r\n        const displayError = () => {\r\n\r\n        }\r\n        console.log(1);\r\n        navigator.geolocation.getCurrentPosition(displayStart, displayError);\r\n\r\n        console.log(2);\r\n\r\n        //js定时器，每5s上报一次地理位置\r\n        setInterval(async function () {\r\n            await navigator.geolocation.getCurrentPosition(displayLocation, displayError);\r\n            await $.ajax({\r\n                url: \"http://localhost:3000/user/cycle/run/\" + routeId,\r\n                type: \"post\",\r\n                async: true,//设置同步方法，这样就可以在返回上一页再骑行的时候可以等上一个ajax执行完，再执行一个全新的ajax请求\r\n                data: {\r\n                    latitude: 34.629637,//run.localtion.lat,\r\n                    longitude: 118.366382,//run.localtion.lng,\r\n                    speed: 3,//run.localtion.speed\r\n                },\r\n                headers: {\r\n                    Authorization: \"Bearer \" + store.state.user.token,\r\n                },\r\n                success(resp) {\r\n                    console.log(resp);\r\n                },\r\n                error(resp) {\r\n                    console.log(resp);\r\n                }\r\n            });\r\n        }, 888000);\r\n\r\n        const localPoint = reactive({ lng: 0, lat: 0, });//{ lng: 118.366382, lat: 34.629637 }\r\n        let zoom = ref(15);\r\n\r\n        console.log(\"routeID:\" + routeId);\r\n        const syncCenterAndZoom = (e) => {\r\n            const { lng, lat } = e.target.getCenter();\r\n            zoom.value = e.target.getZoom();\r\n            nextTick(() => {\r\n                center.value.lng = lng;\r\n                center.value.lat = lat;\r\n                console.log(\"center.value.lng=\" + center.value.lng);\r\n            })\r\n        };\r\n\r\n\r\n        return {\r\n            center,\r\n            run,\r\n            localPoint,\r\n            zoom,\r\n            syncCenterAndZoom,\r\n        }\r\n\r\n\r\n\r\n        //-----------------------------------------\r\n        // let map = ref('');\r\n\r\n\r\n        // const initMap = () => {\r\n        //     map.value = new BMapGL.Map('map');\r\n        //     map.value.centercenterAndZoom(new BMapGL.Point(104.072242, 30.663711), 14);\r\n        // }\r\n\r\n\r\n        // initMap();\r\n\r\n        // return {\r\n        //     map,\r\n        //     initMap,\r\n        // }\r\n        // onMounted(() => {\r\n\r\n        // })\r\n        // var map = new BMap.Map('container')\r\n        // var point = new BMap.Point(116.404, 39.915)\r\n        // map.centerAndZoom(point, 15)\r\n        // map.enableScrollWheelZoom(true)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.map {\r\n    width: 100%;\r\n    height: 1500px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}