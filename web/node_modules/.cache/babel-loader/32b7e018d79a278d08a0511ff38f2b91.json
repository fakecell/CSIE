{"ast":null,"code":"// import BaiduMap from 'vue-baidu-map/components/map/Map.vue'\n// import { onMounted } from 'vue'\nimport { BaiduMap } from 'vue-baidu-map-3x'; // import { useStore } from 'vuex'\n\nimport { reactive, ref, nextTick } from 'vue'; // import router from '@/router/index'\n\nexport default {\n  components: {\n    // BaiduMap\n    BaiduMap\n  },\n\n  setup() {\n    // const end = ref({\n    //     lng: 0,\n    //     lat: 0\n    // });\n    // const start = ref({\n    //     lng: 0,\n    //     lat: 0\n    // });\n    var param = localStorage.getItem(\"routeId\");\n    const routeId = param;\n    const center = ref({\n      lng: 118.36,\n      lat: 34.629\n    });\n    const localPoint = reactive({\n      lng: 0,\n      lat: 0\n    }); //{ lng: 118.366382, lat: 34.629637 }\n\n    let zoom = ref(15);\n    console.log(\"routeID:\" + routeId);\n\n    const syncCenterAndZoom = e => {\n      const {\n        lng,\n        lat\n      } = e.target.getCenter();\n      zoom.value = e.target.getZoom();\n      nextTick(() => {\n        center.value.lng = lng;\n        center.value.lat = lat;\n        console.log(\"center.value.lng=\" + center.value.lng);\n      });\n    };\n\n    const displayLocation = position => {\n      localPoint.lng = position.coords.longitude, localPoint.lat = position.coords.latitude;\n      console.log(\"--------------------\");\n      console.log(localPoint.lng);\n    };\n\n    const displayError = () => {};\n\n    navigator.geolocation.getCurrentPosition(displayLocation, displayError);\n    return {\n      center,\n      localPoint,\n      zoom,\n      syncCenterAndZoom\n    }; //-----------------------------------------\n    // let map = ref('');\n    // const initMap = () => {\n    //     map.value = new BMapGL.Map('map');\n    //     map.value.centercenterAndZoom(new BMapGL.Point(104.072242, 30.663711), 14);\n    // }\n    // initMap();\n    // return {\n    //     map,\n    //     initMap,\n    // }\n    // onMounted(() => {\n    // })\n    // var map = new BMap.Map('container')\n    // var point = new BMap.Point(116.404, 39.915)\n    // map.centerAndZoom(point, 15)\n    // map.enableScrollWheelZoom(true)\n  }\n\n};","map":{"version":3,"mappings":"AAmCA;AACA;AAEA,SAASA,QAAT,QAAyB,kBAAzB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,QAAxB,QAAwC,KAAxC,C,CACA;;AACA,eAAe;EAEXC,UAAU,EAAE;IACR;IACAJ;EAFQ,CAFD;;EAMXK,KAAK,GAAG;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAIC,KAAI,GAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAZ;IACA,MAAMC,OAAM,GAAIH,KAAhB;IACA,MAAMI,MAAK,GAAIR,GAAG,CAAC;MACfS,GAAG,EAAE,MADU;MAEfC,GAAG,EAAE;IAFU,CAAD,CAAlB;IAIA,MAAMC,UAAS,GAAIZ,QAAQ,CAAC;MAAEU,GAAG,EAAE,CAAP;MAAUC,GAAG,EAAE;IAAf,CAAD,CAA3B,CAfI,CAe4C;;IAChD,IAAIE,IAAG,GAAIZ,GAAG,CAAC,EAAD,CAAd;IAEAa,OAAO,CAACC,GAAR,CAAY,aAAaP,OAAzB;;IACA,MAAMQ,iBAAgB,GAAKC,CAAD,IAAO;MAC7B,MAAM;QAAEP,GAAF;QAAOC;MAAP,IAAeM,CAAC,CAACC,MAAF,CAASC,SAAT,EAArB;MACAN,IAAI,CAACO,KAAL,GAAaH,CAAC,CAACC,MAAF,CAASG,OAAT,EAAb;MACAnB,QAAQ,CAAC,MAAM;QACXO,MAAM,CAACW,KAAP,CAAaV,GAAb,GAAmBA,GAAnB;QACAD,MAAM,CAACW,KAAP,CAAaT,GAAb,GAAmBA,GAAnB;QACAG,OAAO,CAACC,GAAR,CAAY,sBAAsBN,MAAM,CAACW,KAAP,CAAaV,GAA/C;MACH,CAJO,CAAR;IAKH,CARD;;IASA,MAAMY,eAAc,GAAKC,QAAD,IAAc;MAClCX,UAAU,CAACF,GAAX,GAAiBa,QAAQ,CAACC,MAAT,CAAgBC,SAAjC,EACIb,UAAU,CAACD,GAAX,GAAiBY,QAAQ,CAACC,MAAT,CAAgBE,QADrC;MAEAZ,OAAO,CAACC,GAAR,CAAY,sBAAZ;MACAD,OAAO,CAACC,GAAR,CAAYH,UAAU,CAACF,GAAvB;IACJ,CALA;;IAMA,MAAMiB,YAAW,GAAI,MAAM,CAE3B,CAFA;;IAGAC,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCR,eAAzC,EAA0DK,YAA1D;IACA,OAAO;MACHlB,MADG;MAEHG,UAFG;MAGHC,IAHG;MAIHG;IAJG,CAAP,CAtCI,CA+CJ;IACA;IAGA;IACA;IACA;IACA;IAGA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;EAEJ;;AA7EW,CAAf","names":["BaiduMap","reactive","ref","nextTick","components","setup","param","localStorage","getItem","routeId","center","lng","lat","localPoint","zoom","console","log","syncCenterAndZoom","e","target","getCenter","value","getZoom","displayLocation","position","coords","longitude","latitude","displayError","navigator","geolocation","getCurrentPosition"],"sourceRoot":"","sources":["D:\\MyAllCoding\\SmartCycling\\web\\src\\views\\user\\cycles\\UserCycleRunIndexView.vue"],"sourcesContent":["<!-- <template>\r\n    <input v-model=\"center.lng\">\r\n    <input v-model=\"center.lat\">\r\n    <input v-model=\"zoom\">\r\n    <baidu-map class=\"map\" :scroll-wheel-zoom=\"true\" :center=\"center\" :zoom=\"zoom\" @moving=\"syncCenterAndZoom\"\r\n        @moveend=\"syncCenterAndZoom\" @zoomend=\"syncCenterAndZoom\">\r\n    </baidu-map>    \r\n    <div id=\"container\"></div>\r\n\r\n    111\r\n</template> -->\r\n\r\n<template>\r\n    <div>\r\n        <!-- <label>关键词：<input v-model=\"keyword\"></label>\r\n        <label>地区：<input v-model=\"location\"></label> -->\r\n        <baidu-map class=\"map\" style=\"overflow:auto\" center=\"山东省临沂市郯城县\" :scroll-wheel-zoom=\"true\">\r\n            <bm-walking :start=\"localPoint\" end=\"郯城县体育场\" :auto-viewport=\"true\" location=\"山东省临沂市郯城县\"\r\n                :selectFirstResult=\"true\"></bm-walking>\r\n            <!-- { lng: 118.380272, lat: 34.616019 }体育馆 -->\r\n            <!-- { lng: 123.792825, lat: 41.861801 } -->\r\n        </baidu-map>\r\n    </div>\r\n</template>\r\n\r\n\r\n<!-- 搜索前往自定义点，交给后端，给定区域找最近的自定义点，返回该点的坐标给前端 -->\r\n\r\n<!-- 定时上报地理位置：js定时器 -->\r\n\r\n<!-- 运动过程中不断移动的点：使用vue-baidu-map-v3中的point，通过每5s上报一次地理位置的时候，就更新点的坐标 -->\r\n\r\n<!-- 路径的显示和关闭可以通过v-if，再加上js中定义一个变量动态实现 -->\r\n\r\n<script>\r\n// import BaiduMap from 'vue-baidu-map/components/map/Map.vue'\r\n// import { onMounted } from 'vue'\r\n\r\nimport { BaiduMap } from 'vue-baidu-map-3x'\r\n// import { useStore } from 'vuex'\r\nimport { reactive, ref, nextTick } from 'vue';\r\n// import router from '@/router/index'\r\nexport default {\r\n\r\n    components: {\r\n        // BaiduMap\r\n        BaiduMap\r\n    },\r\n    setup() {\r\n        // const end = ref({\r\n        //     lng: 0,\r\n        //     lat: 0\r\n        // });\r\n        // const start = ref({\r\n        //     lng: 0,\r\n        //     lat: 0\r\n        // });\r\n        var param = localStorage.getItem(\"routeId\");\r\n        const routeId = param;\r\n        const center = ref({\r\n            lng: 118.36,\r\n            lat: 34.629\r\n        });\r\n        const localPoint = reactive({ lng: 0, lat: 0 });//{ lng: 118.366382, lat: 34.629637 }\r\n        let zoom = ref(15);\r\n\r\n        console.log(\"routeID:\" + routeId);\r\n        const syncCenterAndZoom = (e) => {\r\n            const { lng, lat } = e.target.getCenter();\r\n            zoom.value = e.target.getZoom();\r\n            nextTick(() => {\r\n                center.value.lng = lng;\r\n                center.value.lat = lat;\r\n                console.log(\"center.value.lng=\" + center.value.lng);\r\n            })\r\n        };\r\n        const displayLocation = (position) => {\r\n            localPoint.lng = position.coords.longitude,\r\n                localPoint.lat = position.coords.latitude;\r\n            console.log(\"--------------------\");\r\n            console.log(localPoint.lng);\r\n        }\r\n        const displayError = () => {\r\n\r\n        }\r\n        navigator.geolocation.getCurrentPosition(displayLocation, displayError);\r\n        return {\r\n            center,\r\n            localPoint,\r\n            zoom,\r\n            syncCenterAndZoom,\r\n        }\r\n\r\n\r\n\r\n        //-----------------------------------------\r\n        // let map = ref('');\r\n\r\n\r\n        // const initMap = () => {\r\n        //     map.value = new BMapGL.Map('map');\r\n        //     map.value.centercenterAndZoom(new BMapGL.Point(104.072242, 30.663711), 14);\r\n        // }\r\n\r\n\r\n        // initMap();\r\n\r\n        // return {\r\n        //     map,\r\n        //     initMap,\r\n        // }\r\n        // onMounted(() => {\r\n\r\n        // })\r\n        // var map = new BMap.Map('container')\r\n        // var point = new BMap.Point(116.404, 39.915)\r\n        // map.centerAndZoom(point, 15)\r\n        // map.enableScrollWheelZoom(true)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.map {\r\n    width: 100%;\r\n    height: 1500px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}