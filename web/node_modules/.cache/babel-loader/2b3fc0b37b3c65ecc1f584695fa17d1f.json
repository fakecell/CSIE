{"ast":null,"code":"import BaiduMap from 'vue-baidu-map/components/map/Map.vue'; // import { onMounted } from 'vue'\n\nexport default {\n  components: {\n    BaiduMap\n  },\n\n  data() {\n    return {\n      polyline: {\n        editing: false,\n        paths: []\n      }\n    };\n  },\n\n  methods: {\n    toggle(name) {\n      this[name].editing = !this[name].editing;\n    },\n\n    syncPolyline(e) {\n      if (!this.polyline.editing) {\n        return;\n      }\n\n      const {\n        paths\n      } = this.polyline;\n\n      if (!paths.length) {\n        return;\n      }\n\n      const path = paths[paths.length - 1];\n\n      if (!path.length) {\n        return;\n      }\n\n      if (path.length === 1) {\n        path.push(e.point);\n      }\n\n      this.$set(path, path.length - 1, e.point);\n    },\n\n    newPolyline(e) {\n      if (!this.polyline.editing) {\n        return;\n      }\n\n      const {\n        paths\n      } = this.polyline;\n\n      if (!paths.length) {\n        paths.push([]);\n      }\n\n      const path = paths[paths.length - 1];\n      path.pop();\n\n      if (path.length) {\n        paths.push([]);\n      }\n    },\n\n    paintPolyline(e) {\n      if (!this.polyline.editing) {\n        return;\n      }\n\n      const {\n        paths\n      } = this.polyline;\n      !paths.length && paths.push([]);\n      paths[paths.length - 1].push(e.point);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgBA,OAAOA,QAAP,MAAqB,sCAArB,C,CACA;;AACA,eAAe;EAEXC,UAAU,EAAE;IACRD;EADQ,CAFD;;EAKXE,IAAI,GAAG;IACH,OAAO;MACHC,QAAQ,EAAE;QACNC,OAAO,EAAE,KADH;QAENC,KAAK,EAAE;MAFD;IADP,CAAP;EAMH,CAZU;;EAaXC,OAAO,EAAE;IACLC,MAAM,CAACC,IAAD,EAAO;MACT,KAAKA,IAAL,EAAWJ,OAAX,GAAqB,CAAC,KAAKI,IAAL,EAAWJ,OAAjC;IACH,CAHI;;IAILK,YAAY,CAACC,CAAD,EAAI;MACZ,IAAI,CAAC,KAAKP,QAAL,CAAcC,OAAnB,EAA4B;QACxB;MACJ;;MACA,MAAM;QAAEC;MAAF,IAAY,KAAKF,QAAvB;;MACA,IAAI,CAACE,KAAK,CAACM,MAAX,EAAmB;QACf;MACJ;;MACA,MAAMC,IAAG,GAAIP,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAAlB;;MACA,IAAI,CAACC,IAAI,CAACD,MAAV,EAAkB;QACd;MACJ;;MACA,IAAIC,IAAI,CAACD,MAAL,KAAgB,CAApB,EAAuB;QACnBC,IAAI,CAACC,IAAL,CAAUH,CAAC,CAACI,KAAZ;MACJ;;MACA,KAAKC,IAAL,CAAUH,IAAV,EAAgBA,IAAI,CAACD,MAAL,GAAc,CAA9B,EAAiCD,CAAC,CAACI,KAAnC;IACH,CApBI;;IAqBLE,WAAW,CAACN,CAAD,EAAI;MACX,IAAI,CAAC,KAAKP,QAAL,CAAcC,OAAnB,EAA4B;QACxB;MACJ;;MACA,MAAM;QAAEC;MAAF,IAAY,KAAKF,QAAvB;;MACA,IAAI,CAACE,KAAK,CAACM,MAAX,EAAmB;QACfN,KAAK,CAACQ,IAAN,CAAW,EAAX;MACJ;;MACA,MAAMD,IAAG,GAAIP,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAAlB;MACAC,IAAI,CAACK,GAAL;;MACA,IAAIL,IAAI,CAACD,MAAT,EAAiB;QACbN,KAAK,CAACQ,IAAN,CAAW,EAAX;MACJ;IACH,CAlCI;;IAmCLK,aAAa,CAACR,CAAD,EAAI;MACb,IAAI,CAAC,KAAKP,QAAL,CAAcC,OAAnB,EAA4B;QACxB;MACJ;;MACA,MAAM;QAAEC;MAAF,IAAY,KAAKF,QAAvB;MACA,CAACE,KAAK,CAACM,MAAP,IAAiBN,KAAK,CAACQ,IAAN,CAAW,EAAX,CAAjB;MACAR,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAAL,CAAwBE,IAAxB,CAA6BH,CAAC,CAACI,KAA/B;IACJ;;EA1CK;AAbE,CAAf","names":["BaiduMap","components","data","polyline","editing","paths","methods","toggle","name","syncPolyline","e","length","path","push","point","$set","newPolyline","pop","paintPolyline"],"sourceRoot":"","sources":["D:\\MyAllCoding\\SmartCycling\\web\\src\\views\\user\\cycles\\UserCycleRunIndexView.vue"],"sourcesContent":["<template>\r\n    <baidu-map class=\"map\" :center=\"{ lng: 116.404, lat: 39.915 }\" :zoom=\"14\" @mousemove=\"syncPolyline\"\r\n        @click=\"paintPolyline\" @rightclick=\"newPolyline\">\r\n        <bm-control>\r\n            <button @click=\"toggle('polyline')\">{{ polyline.editing ? '停止绘制' : '开始绘制' }}</button>\r\n        </bm-control>\r\n        <bm-polyline :path=\"path\" v-for=\"path of polyline.paths\"></bm-polyline>\r\n    </baidu-map>\r\n</template>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<script>\r\nimport BaiduMap from 'vue-baidu-map/components/map/Map.vue'\r\n// import { onMounted } from 'vue'\r\nexport default {\r\n\r\n    components: {\r\n        BaiduMap\r\n    },\r\n    data() {\r\n        return {\r\n            polyline: {\r\n                editing: false,\r\n                paths: []\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        toggle(name) {\r\n            this[name].editing = !this[name].editing\r\n        },\r\n        syncPolyline(e) {\r\n            if (!this.polyline.editing) {\r\n                return\r\n            }\r\n            const { paths } = this.polyline\r\n            if (!paths.length) {\r\n                return\r\n            }\r\n            const path = paths[paths.length - 1]\r\n            if (!path.length) {\r\n                return\r\n            }\r\n            if (path.length === 1) {\r\n                path.push(e.point)\r\n            }\r\n            this.$set(path, path.length - 1, e.point)\r\n        },\r\n        newPolyline(e) {\r\n            if (!this.polyline.editing) {\r\n                return\r\n            }\r\n            const { paths } = this.polyline\r\n            if (!paths.length) {\r\n                paths.push([])\r\n            }\r\n            const path = paths[paths.length - 1]\r\n            path.pop()\r\n            if (path.length) {\r\n                paths.push([])\r\n            }\r\n        },\r\n        paintPolyline(e) {\r\n            if (!this.polyline.editing) {\r\n                return\r\n            }\r\n            const { paths } = this.polyline\r\n            !paths.length && paths.push([])\r\n            paths[paths.length - 1].push(e.point)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.bm-view {\r\n    width: 100%;\r\n    height: 300px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}