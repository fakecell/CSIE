{"ast":null,"code":"import { useRoute } from 'vue-router';\nimport { computed } from '@vue/reactivity';\nimport { useStore } from 'vuex';\nexport default {\n  setup() {\n    const store = useStore();\n    const router = useRoute();\n    let router_name = computed(() => router.name);\n\n    const logout = () => {\n      store.dispatch(\"logout\");\n    };\n\n    return {\n      router_name,\n      logout\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA0DA,SAASA,QAAT,QAAyB,YAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,eAAe;EACXC,KAAK,GAAG;IACJ,MAAMC,KAAI,GAAIF,QAAQ,EAAtB;IACA,MAAMG,MAAK,GAAIL,QAAQ,EAAvB;IACA,IAAIM,WAAU,GAAIL,QAAQ,CAAC,MAAMI,MAAM,CAACE,IAAd,CAA1B;;IACA,MAAMC,MAAK,GAAI,MAAM;MACjBJ,KAAK,CAACK,QAAN,CAAe,QAAf;IACJ,CAFA;;IAGA,OAAO;MACHH,WADG;MAEHE;IAFG,CAAP;EAIJ;;AAZW,CAAf","names":["useRoute","computed","useStore","setup","store","router","router_name","name","logout","dispatch"],"sourceRoot":"","sources":["D:\\MyAllCoding\\SmartCycling\\web\\src\\components\\NavBar.vue"],"sourcesContent":["<template>\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div class=\"container\">\r\n            <a class=\"navbar-brand\" href=\"#\">Navbar w/ text</a>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarText\"\r\n                aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <router-link class=\"nav-link\" :to=\"{ name: 'cyclelist' }\">我的车辆</router-link>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"#\">Pricing</a>\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul class=\"navbar-nav\" v-if=\"$store.state.user.is_login\">\r\n                    <li class=\"nav-item dropdown\">\r\n                        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\r\n                            data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                            {{ $store.state.user.username }}\r\n                        </a>\r\n                        <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                            <li>\r\n                                <router-link class=\"dropdown-item\" :to=\"{ name: 'cyclelist' }\">我的车辆\r\n                                </router-link>\r\n                            </li>\r\n                            <li>\r\n                                <hr class=\"dropdown-divider\">\r\n                            </li>\r\n                            <li><a class=\"dropdown-item\" href=\"#\" @click=\"logout\">退出</a></li>\r\n                        </ul>\r\n                    </li>\r\n\r\n                </ul>\r\n\r\n                <ul class=\"navbar-nav\" v-else>\r\n                    <li class=\"nav-item\">\r\n                        <router-link :to=\"{ name: 'user_account_login' }\" class=\"nav-link\" role=\"button\">登陆\r\n                        </router-link>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <router-link :to=\"{ name: 'user_account_register' }\" class=\"nav-link\" role=\"button\">注册\r\n                        </router-link>\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n    </nav>\r\n</template>\r\n\r\n<script>\r\nimport { useRoute } from 'vue-router'\r\nimport { computed } from '@vue/reactivity'\r\nimport { useStore } from 'vuex'\r\nexport default {\r\n    setup() {\r\n        const store = useStore();\r\n        const router = useRoute();\r\n        let router_name = computed(() => router.name)\r\n        const logout = () => {\r\n            store.dispatch(\"logout\");\r\n        }\r\n        return {\r\n            router_name,\r\n            logout,\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n</style>"]},"metadata":{},"sourceType":"module"}